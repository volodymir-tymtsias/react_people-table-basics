{"version":3,"sources":["pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","parentsLink","mother","motherName","father","fatherName","map","born","died","PeoplePage","useState","setPeople","isLoading","setIsLoading","isErrorLoading","setIsErrorLoading","useParams","useEffect","loadedPeople","formatedPeople","currentPerson","find","getParents","catch","finally","length","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3febda62.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n);\n","import { FC } from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  slug?: string;\n};\n\nexport const PeopleTable: FC<Props> = ({ people, slug }) => {\n  const parentsLink = (person: Person, sex: 'f' | 'm') => {\n    if (sex === 'f') {\n      if (person.mother) {\n        return <PersonLink person={person.mother} />;\n      }\n\n      return person.motherName || '-';\n    }\n\n    if (person.father) {\n      return <PersonLink person={person.father} />;\n    }\n\n    return person.fatherName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            className={person.slug === slug ? 'has-background-warning' : ''}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{parentsLink(person, 'f')}</td>\n            <td>{parentsLink(person, 'm')}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrorLoading, setIsErrorLoading] = useState(false);\n  const { slug } = useParams();\n\n  const getParents = (loadedPeople: Person[], currentPerson: Person) => {\n    const mother = loadedPeople.find(\n      (person: Person) => currentPerson.motherName === person.name,\n    );\n    const father = loadedPeople.find(\n      (person: Person) => currentPerson.fatherName === person.name,\n    );\n\n    return {\n      ...currentPerson,\n      mother,\n      father,\n    };\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(loadedPeople => {\n        const formatedPeople = loadedPeople\n          .map(currentPerson => getParents(loadedPeople, currentPerson));\n\n        setPeople(formatedPeople);\n      })\n      .catch(() => setIsErrorLoading(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isErrorLoading && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          { people && !people.length && !isLoading && !isErrorLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people\n            && !!people.length\n            && <PeopleTable people={people} slug={slug} />}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}